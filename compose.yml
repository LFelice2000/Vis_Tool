version: '3.1'

  
networks:
  tfg-network1:
      driver: "bridge"

services:
  db:
    container_name: "tfgdb"
    image: "postgres:latest"
    restart: "always"
    environment:
      POSTGRES_PASSWORD: "alefelice01"
    ports:
      - "5432:5432"
    networks:
      - "tfg-network1"

  web_scrapper:
    container_name: "tfgscrapper"
    build: "./web_scrapper"
    command: bash -c "daphne -e ssl:8443:privateKey=certs/privkey1.pem:certKey=certs/fullchain1.pem web_scrapper.asgi:application -b 0.0.0.0 -p 8000"
    restart: "always"
    ports:
      - "8000:8000"
    networks:
      - "tfg-network1"
    expose: 
      - "8000"
  
  web_service:
    container_name: "tfgservice"
    build: "./web_api"
    command: bash -c "python3 manage.py migrate && gunicorn -b 0.0.0.0:8080 web_api.wsgi:application"
    restart: "always"
    ports:
      - "4000:4000"
      - "8080:8080"
    networks:
      - "tfg-network1"
    depends_on:
      - "db"
      - "web_scrapper"
    expose: 
      - "8080"
      - "4000"

    
#-e ssl:8443:privateKey=/etc/letsencrypt/live/nabu.ii.uam.es/privkey.pem:certKey=/etc/letsencrypt/live/nabu.ii.uam.es/fullchain.pem
#volumes:
#      - /etc/letsencrypt/live/nabu.ii.uam.es:/etc/letsencrypt/live/nabu.ii.uam.es/

#web_service -> gunicorn -b 0.0.0.0:8080 web_api.wsgi:application